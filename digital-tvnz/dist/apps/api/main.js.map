{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;AAEH,+CAAmC;AACnC,+CAAoC;AAEpC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,yCAA8B;AAC9B,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;QACxC,OAAO,CACL;YACE,GAAG,EAAE,qDAAqD,GAAG,CAAC,KAAK,CAAC,KAAK,WAAW;YACpF,OAAO,EAAE;gBACP,aAAa,EAAE,SAAS,MAAM,CAAC,IAAI,CACjC,mDAAmD,CACpD,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBACtB,MAAM,EAAE,kBAAkB;aAC3B;SACF,EACD,UAAU,KAAK,EAAE,IAAI;YACnB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CACF,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,MAAM,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC","sources":["webpack://digital-tvnz/external commonjs \"cors\"","webpack://digital-tvnz/external commonjs \"express\"","webpack://digital-tvnz/external commonjs \"request\"","webpack://digital-tvnz/webpack/bootstrap","webpack://digital-tvnz/./apps/api/src/main.ts"],"sourcesContent":["module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"request\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport * as express from 'express';\nimport request = require('request');\n\nconst app = express();\nimport cors = require('cors');\napp.use(cors());\napp.get('/api', (req, res) => {\n  console.log('request...', req.query.level),\n    request(\n      {\n        uri: `https://tvnztech.atlassian.net/rest/api/3/project/${req.query.level}/versions`,\n        headers: {\n          Authorization: `Basic ${Buffer.from(\n            'pragya.nandan@tvnz.co.nz:2WykQkDl5PVWugLvUVvS297D'\n          ).toString('base64')}`,\n          Accept: 'application/json',\n        },\n      },\n      function (error, body) {\n        res.json(body);\n      }\n    );\n});\n\nconst port = process.env.port || 3333;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/api`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}